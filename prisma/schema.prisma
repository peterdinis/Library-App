// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum Role {
  USER
  ADMIN
}

enum BorrowStatus {
  BORROWED
  RETURNED
}

model User {
  id              String   @id @default(uuid()) @unique
  fullName        String
  email           String   @unique
  universityId    Int      @unique
  password        String
  universityCard  String
  status          Status   @default(PENDING)
  role            Role     @default(USER)
  lastActivityDate DateTime @default(now())
  createdAt       DateTime @default(now())

  borrowRecords   BorrowRecord[]
}

model Book {
  id             String   @id @default(uuid()) @unique
  title          String
  author         String
  genre          String
  rating         Int
  coverUrl       String
  coverColor     String
  description    String
  totalCopies    Int      @default(1)
  availableCopies Int     @default(0)
  videoUrl       String
  summary        String
  createdAt      DateTime @default(now())

  borrowRecords  BorrowRecord[]
}

model BorrowRecord {
  id         String      @id @default(uuid()) @unique
  userId     String
  bookId     String
  borrowDate DateTime    @default(now())
  dueDate    DateTime
  returnDate DateTime?
  status     BorrowStatus @default(BORROWED)
  createdAt  DateTime    @default(now())

  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  book       Book   @relation(fields: [bookId], references: [id], onDelete: Cascade)
}